.TH LITREPL "1" "1980\-01\-01" "litrepl 3.13.1" "Generated Python Manual"
.SH NAME
litrepl \- command\-line processor for Markdown or LaTeX documents with literate
programming code sections. Instructed by its arguments, it evaluates and
updates sections via background interpreters. Interpreters can stay
active for a read\-eval\-paste\-loop style.
.SH SYNOPSIS
.B litrepl
[-h] [-v] [--filetype STR] [--python-markers STR[,STR]] [--ai-markers STR[,STR]] [--sh-markers STR[,STR]] [--python-interpreter EXE] [--ai-interpreter EXE] [--sh-interpreter EXE] [--python-auxdir DIR] [--ai-auxdir DIR] [--sh-auxdir DIR] [--timeout F[,F]] [--propagate-sigint] [-d INT] [--verbose] [-C DIR] [--pending-exitcode INT] [--irreproducible-exitcode INT] [--exception-exitcode INT] [--foreground] [--map-cursor LINE:COL:FILE] [--result-textwidth NUM] {start,stop,restart,status,parse,parse-print,eval-sections,eval-code,repl,interrupt,print-regexp,print-grammar,print-auxdir} ...

.SH
POSITIONAL ARGUMENTS
.TP
\fBlitrepl\fR \fI\,start\/\fR
Start a background interpreter. The CLASS of an interpreter
should be specified. \-\-<CLASS>\-interpreter, \-\-<CLASS>\-auxdir etc. are
applied.
.TP
\fBlitrepl\fR \fI\,stop\/\fR
Stop the background interpreters.
.TP
\fBlitrepl\fR \fI\,restart\/\fR
Restart the background interpreters.
.TP
\fBlitrepl\fR \fI\,status\/\fR
Print background interpreter's status.
.TP
\fBlitrepl\fR \fI\,parse\/\fR
Parse the input file without futher processing (diagnostics).
.TP
\fBlitrepl\fR \fI\,parse\-print\/\fR
Parse and print the input file back (diagnostics).
.TP
\fBlitrepl\fR \fI\,eval\-sections\/\fR
Parse stdin, evaluate the specified sections (by default \-
all available sections), print the resulting file to stdout.
.TP
\fBlitrepl\fR \fI\,eval\-code\/\fR
Evaluate the code snippet.
.TP
\fBlitrepl\fR \fI\,repl\/\fR
Connect to the background terminal using GNU socat.
.TP
\fBlitrepl\fR \fI\,interrupt\/\fR
Send SIGINT to the background interpreter.
.TP
\fBlitrepl\fR \fI\,print\-regexp\/\fR
Print regexp matching start of code sections for the given file type.
.TP
\fBlitrepl\fR \fI\,print\-grammar\/\fR
Print the resulting grammar for the given filetype.
.TP
\fBlitrepl\fR \fI\,print\-auxdir\/\fR
Print the auxdir for the given interpreter type.

.SH COMMAND \fI\,'litrepl start'\/\fR
usage: litrepl start [\-h] CLASS

.TP
\fBCLASS\fR
Interpreter class: python|ai|sh.

.SH COMMAND \fI\,'litrepl stop'\/\fR
usage: litrepl stop [\-h] [CLASS]

.TP
\fBCLASS\fR
Interpreter class: python|ai|sh|all. Default is "all"

.SH COMMAND \fI\,'litrepl restart'\/\fR
usage: litrepl restart [\-h] [CLASS]

.TP
\fBCLASS\fR
Interpreter class: python|ai|sh|all. Default is "all"

.SH COMMAND \fI\,'litrepl status'\/\fR
usage: litrepl status [\-h] [\-\-tty] [CLASS]

.TP
\fBCLASS\fR
Interpreter class: python|ai|sh|all. Default is "all"

.SH OPTIONS \fI\,'litrepl status'\/\fR
.TP
\fB\-\-tty\fR
Read intput document from stdin (required to get per\-section status).

.SH COMMAND \fI\,'litrepl parse'\/\fR
usage: litrepl parse [\-h]

.SH COMMAND \fI\,'litrepl parse\-print'\/\fR
usage: litrepl parse\-print [\-h]

.SH COMMAND \fI\,'litrepl eval\-sections'\/\fR
usage: litrepl eval\-sections [\-h] [LOCS]

.TP
\fBLOCS\fR
(N|$|N..N)[,(...)] where N is either: [+|\-]number,$,ROW:COL

.SH COMMAND \fI\,'litrepl eval\-code'\/\fR
usage: litrepl eval\-code [\-h] CLASS

.TP
\fBCLASS\fR
Interpreter class: python|ai|sh.

.SH COMMAND \fI\,'litrepl repl'\/\fR
usage: litrepl repl [\-h] CLASS

.TP
\fBCLASS\fR
Interpreter class: python|ai|sh.

.SH COMMAND \fI\,'litrepl interrupt'\/\fR
usage: litrepl interrupt [\-h] [LOCS]

.TP
\fBLOCS\fR
(N|$|N..N)[,(...)] where N is either: [+|\-]number,$,ROW:COL

.SH COMMAND \fI\,'litrepl print\-regexp'\/\fR
usage: litrepl print\-regexp [\-h] [\-\-tty] [STR]

.TP
\fBSTR\fR
Regexp format to print: 'vim' or 'lark'. Defaults to 'vim'.

.SH OPTIONS \fI\,'litrepl print\-regexp'\/\fR
.TP
\fB\-\-tty\fR
Read intput document from stdin (required to get per\-section status).

.SH COMMAND \fI\,'litrepl print\-grammar'\/\fR
usage: litrepl print\-grammar [\-h] [\-\-tty]

.SH OPTIONS \fI\,'litrepl print\-grammar'\/\fR
.TP
\fB\-\-tty\fR
Read intput document from stdin (required to get per\-section status).

.SH COMMAND \fI\,'litrepl print\-auxdir'\/\fR
usage: litrepl print\-auxdir [\-h] CLASS

.TP
\fBCLASS\fR
Interpreter class: python|ai|sh.

.SH OPTIONS
.TP
\fB\-v\fR, \fB\-\-version\fR
Print version.

.TP
\fB\-\-filetype\fR \fI\,STR\/\fR
Specify the type of input formatting (markdown|[la]tex|auto).

.TP
\fB\-\-python\-markers\fR \fI\,STR[,STR]\/\fR
Specify section markers recognized as `python` sections. Defaults to the value
of LITREPL_PYTHON_MARERS if set, otherwize "python".

.TP
\fB\-\-ai\-markers\fR \fI\,STR[,STR]\/\fR
Specify section markers recognized as `ai` sections. Defaults to the value of
LITREPL_AI_MARERS if set, otherwize "codeai,ai".

.TP
\fB\-\-sh\-markers\fR \fI\,STR[,STR]\/\fR
Specify section markers recognized as `shell` sections. Defaults to the value
of LITREPL_SH_MARERS if set, otherwize "shell".

.TP
\fB\-\-python\-interpreter\fR \fI\,EXE\/\fR
Python interpreter command line, or `auto`. Defaults to the
LITREPL_PYTHON_INTERPRETER environment variable if set, otherwise "auto".
Litrepl determines "python" or "ipython" type according to the value.

.TP
\fB\-\-ai\-interpreter\fR \fI\,EXE\/\fR
`aicli` interpreter command line or `auto`. Defaults to the
LITREPL_AI_INTERPRETER environment variable if set, otherwise "auto".

.TP
\fB\-\-sh\-interpreter\fR \fI\,EXE\/\fR
Shell interpreter command line or `auto`. Defaults to the
LITREPL_SH_INTERPRETER environment variable if set, otherwise "auto".

.TP
\fB\-\-python\-auxdir\fR \fI\,DIR\/\fR
This directory stores Python interpreter pipes. It defaults to
LITREPL_PYTHON_AUXDIR if set; otherwise, it's created in the system's
temporary directory, named after the current working directory.

.TP
\fB\-\-ai\-auxdir\fR \fI\,DIR\/\fR
This directory stores AI interpreter pipes. It defaults to LITREPL_AI_AUXDIR
if set; otherwise, it's created in the system's temporary directory, named
after the current working directory.

.TP
\fB\-\-sh\-auxdir\fR \fI\,DIR\/\fR
This directory stores AI interpreter pipes. It defaults to LITREPL_SH_AUXDIR
if set; otherwise, it's created in the system's temporary directory, named
after the current working directory.

.TP
\fB\-\-timeout\fR \fI\,F[,F]\/\fR
Timeouts for initial evaluation and for pending checks, in seconds. If the
latter is omitted, it is considered to be equal to the former one.

.TP
\fB\-\-propagate\-sigint\fR
If set, litrepl will catch and resend SIGINT signals to the running
interpreter. Otherwise it will just terminate itself leaving the interpreter
as\-is.

.TP
\fB\-d\fR \fI\,INT\/\fR, \fB\-\-debug\fR \fI\,INT\/\fR
Enable (a lot of) debug messages.

.TP
\fB\-\-verbose\fR
Be more verbose (used in status).

.TP
\fB\-C\fR \fI\,DIR\/\fR, \fB\-\-workdir\fR \fI\,DIR\/\fR
Set the working directory before execution. By default, it uses
LITREPL_WORKDIR if set, otherwise remains the current directory. This affects
the directory of a new interpreter and the \-\-<interpreter>\-auxdir option.

.TP
\fB\-\-pending\-exitcode\fR \fI\,INT\/\fR
Return this error code if whenever a section hits timeout.

.TP
\fB\-\-irreproducible\-exitcode\fR \fI\,INT\/\fR
Return this error code if a section outputs a different result than the one
that is already present in the document.

.TP
\fB\-\-exception\-exitcode\fR \fI\,INT\/\fR
Return this error code at exception, if any. Note: this option might not be
defined for some interpreters. It takes affect only for newly\-started
interpreters.

.TP
\fB\-\-foreground\fR
Start a separate session and stop it when the evaluation is done. All
\-\-*\-auxdir settings are ignored in this mode.

.TP
\fB\-\-map\-cursor\fR \fI\,LINE:COL:FILE\/\fR
Calculate the new position of a cursor at LINE:COL and write it to FILE.

.TP
\fB\-\-result\-textwidth\fR \fI\,NUM\/\fR
Wrap result lines longer than NUM symbols.

.SH AUTHOR
.nf
Sergei Mironov
.fi
.nf
sergei.v.mironov@proton.me
.fi

.SH DISTRIBUTION
The latest version of litrepl may be downloaded from
.UR https://github.com/sergei\-mironov/litrepl
.UE
